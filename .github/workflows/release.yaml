name: Build and release

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - master
  schedule:
    - cron: '0 2 * * *'

jobs:
  build-macwin:
    name: Build binary (Mac/Win)
    runs-on: ${{ matrix.os }}
    env:
      CABAL_VER: 3.6.2.0
      MACOSX_DEPLOYMENT_TARGET: 10.13
      JSON_VERSION: "0.0.7"
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      S3_HOST: ${{ secrets.S3_HOST }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            ARTIFACT: "x86_64-mingw64-ghcup"
            GHC_VER: 8.10.7
            ARCH: 64
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: Run build (windows/mac)
        run: bash .github/scripts/build.sh
        env:
          ARTIFACT: ${{ matrix.ARTIFACT }}
          ARCH: ${{ matrix.ARCH }}
          GHC_VER: ${{ matrix.GHC_VER }}
          DISTRO: na
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          S3_HOST: ${{ env.S3_HOST }}
          HOMEBREW_CHANGE_ARCH_TO_ARM: 1

      - if: always()
        name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: |
            ./out/*

  test-macwin:
    name: Test Mac/Win
    needs: "build-macwin"
    runs-on: ${{ matrix.os }}
    env:
      CABAL_VER: 3.6.2.0
      MACOSX_DEPLOYMENT_TARGET: 10.13
      JSON_VERSION: "0.0.7"
    strategy:
      matrix:
        include:
          - os: windows-latest
            ARTIFACT: "x86_64-mingw64-ghcup"
            GHC_VER: 8.10.7
            ARCH: 64
            DISTRO: na

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: 'true'

      - uses: actions/download-artifact@v3
        with:
          name: artifacts
          path: ./out

      - name: Run test (windows/mac)
        run: bash .github/scripts/test.sh
        env:
          ARTIFACT: ${{ matrix.ARTIFACT }}
          ARCH: ${{ matrix.ARCH }}
          GHC_VER: ${{ matrix.GHC_VER }}
          DISTRO: ${{ matrix.DISTRO }}
          HOMEBREW_CHANGE_ARCH_TO_ARM: 1

      - if: failure() && runner.os == 'Windows'
        name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: testfiles
          path: |
            ./test/golden/windows/GHCupInfo*json

      - if: failure() && runner.os != 'Windows'
        name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: testfiles
          path: |
            ./test/golden/unix/GHCupInfo*json

  release:
    name: release
    needs: ["test-macwin"]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts
          path: ./out

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            ./out/*
